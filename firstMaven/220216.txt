
webapp : 개발도구에서의 root
서버에서의 root : 프로젝트
Contextpath : 프로젝트 이름
--------------------------------------

전통적 jsp

- 표현부 -
html
EL 표현식,
<jsp: > 액션태그,
jstl

- 구현부 -
자바 코드로 구현
%@	
%!	변수, 함수 선언하는 선언문
%	실제 자바 코드가 들어가는 부분
%=	browser에 출력

--------------------------------------

Servlet

Java 안에 html 코드 작성
백은 순수 java


교과서에서는 jsp, servlet을 이용하지만

현업에서는 백은 순수 java를 이용하는 경우가 많다

--------------------------------------

서버를 재시작 해야 하는 경우 3가지

1. java code 변경,
2. xml 파일 변경,
3. properties 파일 변경 시

--------------------------------------

request, response, session 객체는 서버가 자동으로 만들어 준다

--------------------------------------

Maven : 프로젝트 빌드 도구

외부 라이브러리 의존성을 관리해준다
pom.xml을 이용해서 필요한 라이브러리를 관리

.m2 디렉토리에 외부 라이브러리가 저장되고,
프로젝트에서 라이브러리를 필요로 하면 가져다 등록시킨다

.m2 에 없으면 mvn 원격 repository 에서 가져와 .m2에 넣어준다


서버에 프로그램을 올릴때 바로 소스코드를 등록시킬 수 없다.
mvn등의 빌드 도구를 이용해서 .war(Web Application libRary) 파일로 만들어 서버에 올린다.

-----------------------------------------

Maven project 생성

group id : 회사 도메인의 역순
artifact id : project 이름 / 숫자로만 이루어진 경우 package 이름을 따로 명시할 것
package : group id + artifact id

------------------------------------------

properties - dependencies - build 태그

pom.xml : mvn 프로젝트의 환경을 설정

html과 같은 형식으로 주석문 작성 가능하나,
주석을 달 때는 위에 달아야 오류가 잘 안남


<properties> 태그 : pom.xml 안에서 사용할 변수를 정의

<dependencies> 태그 : 필요한 라이브러리 의존성을 관리
<dependency> 태그 : 태그 내의 내용 전체가 한 세트의 라이브러리, dependencies 태그 내부에 위치

<build> 태그 : packaging, 즉 배포 버전을 만들 때 환경설정

--------------------------------------------

maven repository 에서
빌드 도구에 따른 코드를 복사 한 후
pom.xml 의 dependencies 태그 내에 작성

이후 프로젝트 - maven - update project 실행

--------------------------------------------

java, resources 폴더 만들어서 소스폴더로 사용

WEB-INF 하위에 lib 폴더 생성, maven dependencies의 library가 lib에 저장될 수 있도록 함

---------------------------------------------

Run as Maven install : 프로젝트를 배포할 때 사용

project를 Run as Maven install 하면 war로 만들어줌

이후 target 폴더의 firstMaven.war 또는 target 폴더 자체를 서버관리자에게 전달


이후 수정 사항이 생긴 뒤에는

Run as Maven clean 후 Maven install

-------------------------------------------------

web.xml 만드는 법

dynamic web module version 3.1

dynamic web project 생성 후
WEB-INF 하위에 xml file, web.xml로 생성

xml 파일은 dtd가 필요함
maven repository에서 복사해 놓은 코드를 붙여넣고
welcome file 태그 작성
(xml 파일에서는 tag 대신 element라는 용어 사용)

이후 index.jsp 생성 후 servlet 연결이 없기 때문에 오류 뜸
- 프로젝트의 properties에서 runtime을 톰캣으로 지정해 줄 수 있으나,
이렇게 하는 순간 이 프로젝트는 톰캣에서만 작동하는 프로그램이 되므로 지양

facet에서 java 버전 확인

적용 후 index.jsp의 서블릿 코드 부분을 잘라냈다 다시 붙여넣으면 오류 없어짐






